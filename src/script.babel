/*two banks of sound clips */
const bank1 = [
  {key: "Q", url: "https://freesound.org/data/previews/75/75845_260058-lq.mp3", clipId: "tom", id: "tom1"}, {key: "W", url: "https://freesound.org/data/previews/272/272467_2278554-lq.mp3", clipId: "ride", id: "ride1"},{key: "E", url: "https://freesound.org/data/previews/209/209870_3797507-lq.mp3", clipId: "crash", id: "crash1"}, {key: "A", url: "https://freesound.org/data/previews/502/502951_4600366-lq.mp3", clipId: "kick", id: "kick1"}, {key: "S", url: "https://freesound.org/data/previews/103/103365_1225281-lq.mp3", clipId: "snare", id: "snare1"}, {key: "D", url: "https://freesound.org/data/previews/91/91791_1491361-lq.mp3", clipId: "open hat", id: "hat1"}, {key: "Z", url: "https://freesound.org/data/previews/346/346722_909262-lq.mp3", clipId: "cowbell", id: "cowbell1"}, {key: "X", url: "https://freesound.org/data/previews/342/342209_5876986-lq.mp3", clipId: "rim", id: "rim1"}, {key: "C", url: "https://freesound.org/data/previews/25/25689_48671-lq.mp3", clipId: "closed hat", id:"hat1a"}
];
const bank2 = [
  {key: "Q", url: "https://freesound.org/data/previews/4/4354_4948-lq.mp3", clipId: "thump", id: "tom2"}, {key: "W", url: "https://freesound.org/data/previews/9/9614_4948-lq.mp3", clipId: "electro-ride", id: "ride2"}, {key: "E", url: "https://freesound.org/data/previews/319/319821_4486188-lq.mp3", clipId: "scrash", id: "crash2"}, {key: "A", url: "https://freesound.org/data/previews/25/25647_48671-lq.mp3", clipId: "stomp-kick", id: "kick2"}, {key: "S", url: "https://freesound.org/data/previews/528/528461_3797507-lq.mp3", clipId: "bonk-snare", id: "snare2"}, {key: "D", url: "https://freesound.org/data/previews/91/91683_1491361-lq.mp3", clipId: "open electro hat", id: "hat2"}, {key: "Z", url: "https://freesound.org/data/previews/98/98257_1651335-lq.mp3", clipId: "dink", id: "cowbell2"}, {key: "X", url: "https://freesound.org/data/previews/183/183108_2394245-lq.mp3", clipId: "flick", id: "rim2"}, {key: "C", url: "https://freesound.org/data/previews/25/25704_48671-lq.mp3", clipId: "closed electro hat", id: "hat2a"}
];
/*child component to create the drumpad and make it interactive with mouse clicks and the keyboard */  
class DrumPad extends React.Component{
  constructor(props){
    super(props);
  this.state = {
    backgroundColor: "white" /*to be changed with keypress */
  };
    this.handleKeyPress = this.handleKeyPress.bind(this);
    this.handleClick = this.handleClick.bind(this);
    this.handleKeyUp = this.handleKeyUp.bind(this);
  }
  
componentDidMount() {
document.addEventListener('keydown', this.handleKeyPress);
  document.addEventListener('keyup', this.handleKeyUp);
  }
   
  componentWillUnmount() {
document.removeEventListener('keydown', this.handleKeyPress);
document.removeEventListener('keyup', this.handleKeyUp);    
  }
  
handleKeyPress = (item) => {
  if(item.keyCode === this.props.text.charCodeAt()){
    this.audio.play();
    this.audio.currentTime = 0;
    this.props.changeDisplay(this.props.id);
    this.setState({
      backgroundColor: "hotpink" /*changes color with the keypress */
    });
  }
}
 handleKeyUp = (item) => {
  if(item.keyCode === this.props.text.charCodeAt()){
    this.setState({
      backgroundColor: "white" /* changes the color back when keypress finished*/
    });
 }     
  }

handleClick = () => {
  this.audio.play();
  this.audio.currentTime = 0;
this.props.changeDisplay(this.props.id); 
}  
 
render () {
  const styles = {
   padStyle: { backgroundColor: this.state.backgroundColor}
  };
  const {padStyle} = styles;
  
  return(
  <div className="drum-pad" style={padStyle} id={this.props.id} onClick={this.handleClick}>
      <p>{this.props.text}</p>
      <audio ref={ref => this.audio = ref} className="clip" id={this.props.text} src={this.props.src} />      
      </div>
  )};
}
//parent component
class BeatBox extends React.Component{
  constructor(props){
    super(props);  
    this.state = {
      display: "",
      bank: bank1,
      activeBank: "Groovy Bank"
    }
   this.changeDisplay = this.changeDisplay.bind(this); 
    this.handleBank = this.handleBank.bind(this);
  }
  
changeDisplay = (display) => this.setState({display});
 //button for bank switch 
 handleBank = () => {
    this.state.bank === bank1?
    this.setState({
      activeBank: 'Crazy Bank',
      bank: bank2
    }):
    this.setState({
      activeBank: 'Groovy Bank',
      bank: bank1
    });  
  } 
  render(){
    return( 
  <div id="drum-machine" className="outer-container">
        <div className="inner-container">
      <div className="left-container">  
    <div id="drum-pads">     
    {(this.state.bank).map(x => (
      <DrumPad 
        text={x.key} 
        id={x.clipId} 
        src={x.url} 
        changeDisplay={this.changeDisplay}
        />
    ))}
      </div>
          </div>
          <div className="center-container">
          </div>
          <div className="right-container">
        <div id="display" className="display">
          <p style={{fontSize: "1.1rem"}}> {this.state.activeBank}</p><hr/>
          <p>{this.state.display}</p>
        </div>
        <div className="bank-select"
          onClick={this.handleBank}>
          <p>Bank</p>
          </div>
          </div>
        </div> 
    </div>
);
  }
}
ReactDOM.render(<BeatBox/>, document.getElementById("beatbox"))